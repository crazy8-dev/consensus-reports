name: linux-checks
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 2,4,6 * * *'
env:
  GO_VERSION: 1.14
  CI_GOMAXPROCS: 0
  INSOLAR_LOG_LEVEL: warn
  GOTEST: 'gotestsum --'
jobs:
  tests-on-linux:
    name: checks # don't change, this name is used in repository restricts!
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/consensus-reports/consensus-reports/go
      WORKDIR: /home/runner/work/consensus-reports/consensus-reports/go/src/github.com/insolar/consensus-reports
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          path: go/src/github.com/insolar/consensus-reports
      - name: Set up go ${{env.GO_VERSION}}
        uses: actions/setup-go@v2
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Add bin to path
        run: echo "::add-path::${{env.GOPATH}}/bin"
      - name: Check succesful build
        run: |
          make build
        working-directory: ${{env.WORKDIR}}
      - name: Install golangci-lint
        if: always()
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.23.6
      - name: Run golangci-lint
        if: always()
        run: make lint
        working-directory: ${{env.WORKDIR}}
      - name: Run unit tests and check code coverage
        if: always()
        run: make coverage
        working-directory: ${{env.WORKDIR}}
      - name: Upload coverage to Codecov
        run: ./scripts/dev/codecov-upload.sh -f ./coverage.out -y ./.codecov.yml -n coverage-report -F
        working-directory: ${{env.WORKDIR}}
      - name: Add coverage.html to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: coverage-html
          path: ${{env.WORKDIR}}/coverage.html
      - name: Add coverage.out to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: coverage-out
          path: ${{env.WORKDIR}}/coverage.out
